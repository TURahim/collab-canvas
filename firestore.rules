rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Collection group query support for room metadata
    // Allows querying across all metadata collections using collectionGroup(db, "metadata")
    match /{path=**}/metadata/{doc} {
      // Anyone authenticated can read any room metadata
      allow read: if request.auth != null;
      
      // Only room owner can create/update/delete room metadata
      allow create: if request.auth != null
        && request.resource.data.owner == request.auth.uid;
      
      allow update, delete: if request.auth != null
        && resource.data.owner == request.auth.uid;
    }
    
    // Specific path for room metadata (for direct document access)
    match /rooms/{roomId}/metadata/info {
      // Anyone authenticated can read room metadata
      allow read: if request.auth != null;
      
      // Only room owner can create/update/delete room metadata
      allow create: if request.auth != null
        && request.resource.data.owner == request.auth.uid;
      
      allow update, delete: if request.auth != null
        && resource.data.owner == request.auth.uid;
    }
    
    // Room-based shape storage
    match /rooms/{roomId}/shapes/{shapeId} {
      // Allow authenticated users to read all shapes in a room
      allow read: if request.auth != null;
      
      // Allow authenticated users to create and update shapes
      allow create, update: if request.auth != null
        && request.resource.data.createdBy is string
        && request.resource.data.id is string
        && request.resource.data.type is string;
      
      // Allow users to delete shapes (any authenticated user for collaborative editing)
      allow delete: if request.auth != null;
    }
    
    // Room-based snapshot storage (full document state with pages)
    match /rooms/{roomId}/snapshot/{doc} {
      // Allow authenticated users to read room snapshot
      allow read: if request.auth != null;
      
      // Allow authenticated users to save snapshots
      allow create, update: if request.auth != null
        && request.resource.data.savedBy is string;
      
      // Allow users to delete snapshots (for room cleanup)
      allow delete: if request.auth != null;
    }
    
    // Room-based asset storage (image metadata)
    match /rooms/{roomId}/assets/{assetId} {
      // Allow authenticated users to read asset metadata
      allow read: if request.auth != null;
      
      // Allow authenticated users to create assets with validation
      allow create: if request.auth != null
        && request.resource.data.id is string
        && request.resource.data.type == 'image'
        && request.resource.data.status in ['pending', 'ready']
        && request.resource.data.src is string
        && request.resource.data.mimeType is string
        && request.resource.data.size is number
        && request.resource.data.uploadedBy is string
        && request.resource.data.roomId == roomId;
      
      // Allow authenticated users to update assets (pending â†’ ready transition)
      allow update: if request.auth != null
        && request.resource.data.status in ['pending', 'ready'];
      
      // Allow authenticated users to delete assets (for cleanup)
      allow delete: if request.auth != null;
    }
    
    // Room-based tombstone storage (deletion tracking for delta replay)
    match /rooms/{roomId}/deletes/{shapeId} {
      // Allow authenticated users to read deletion records
      allow read: if request.auth != null;
      
      // Allow authenticated users to create tombstone records when deleting shapes
      allow create, update: if request.auth != null
        && request.resource.data.shapeId is string
        && request.resource.data.deletedAt != null;
      
      // Allow deletion of tombstone records (for cleanup)
      allow delete: if request.auth != null;
    }
  }
}
